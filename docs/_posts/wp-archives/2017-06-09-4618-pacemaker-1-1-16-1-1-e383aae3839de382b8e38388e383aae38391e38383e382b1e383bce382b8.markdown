---
author: ksk
comments: false
date: 2017-06-09 04:00:50+00:00
layout: post
permalink: /wp/archives/4618
slug: pacemaker-1-1-16-1-1-%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%83%91%e3%83%83%e3%82%b1%e3%83%bc%e3%82%b8
title: Pacemaker-1.1.16-1.1 リポジトリパッケージ
wordpress_id: 4618
categories:
- リリース情報
tags:
- リリース情報
---

Pacemaker-1.1.16-1.1 リポジトリパッケージをリリースしました。

このページでは Pacemaker-1.1.16-1.1 リポジトリパッケージの簡単な使い方を説明します。

このページの変更履歴

  * 2017.06.09 Pacemaker-1.1.16-1.1(RHEL6/RHEL7用)リポジトリパッケージリリース 

* * *

## 1. Pacemaker-1.1.16-1.1 の概要

Pacemaker-1.1.16-1.1 リポジトリパッケージは、前回のリリース版 [Pacemaker-1.1.15-1.1リポジトリパッケージ](/wp/archives/4591) からバグ修正等が行われたマイナーバージョンアップ版です。

利用方法は従来の 1.1.15-1.1 から変更はありません。1.1.15-1.1 と同一の設定で利用可能です。

主な差分・改善点については「1.1.15-1.1 からの主な差分」の項を参照してください。

また本ページに記載している構築手順を自動化した Ansible Playbook の例を併せて公開していますので、ぜひご参考ください(「Ansible Playbook 例」の項参照)。

より具体的な構成例・利用手順については、以下のOSCのセミナー資料が非常に参考になります。 これらのセミナー資料は Pacemaker-1.1.12-1.1を使った例ですが、「corosync設定ファイルの設定」、「クラスタ起動スクリプトの設定」の差分に注意してもらえればそのまま適用可能です。

  * [OSC2014 Tokyo/Fall セミナー資料・アンケート結果公開](/wp/archives/4038)
  * [OSC2015 Nagoya セミナー資料・アンケート結果公開](/wp/archives/4098)

* * *

## 2. ダウンロード

Pacemaker-1.1.16-1.1リポジトリパッケージのリリース版は以下のページよりダウンロードできます。

  * [Pacemakerリポジトリパッケージ (RHEL 7) 1.1.16-1.1](https://osdn.net/projects/linux-ha/releases/67817)
  * [Pacemakerリポジトリパッケージ (RHEL 6) 1.1.16-1.1](https://osdn.net/projects/linux-ha/releases/67818)
  * 対応環境: RHEL 6 / RHEL 7 および互換OS、x86_64環境 
  * _※ RHEL 6.5以前の環境では、以下の Errata 適用が必須です。_
    * [RHBA-2014:1538-1 glib2 bug fix and enhancement update](https://rhn.redhat.com/errata/RHBA-2014-1538.html)

* * *

## 3. インストール前の準備

Pacemaker インストール時に必要な依存パッケージも自動的にインストールできるようにするため、 あらかじめ OS のインストールメディア等が参照できるようにしておきます。

CentOS上にインストールする場合、CentOS 同梱版の Pacemaker と混在してしまわないように 以下の exclude 設定を追加します。

**/etc/yum.repos.d/CentOS-Base.repo 設定例**
    
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;">[base]
(...)
exclude=pacemaker* corosync* resource-agents* crmsh* cluster-glue* libqb* fence-agents* pcs*

[updates]
(...)
exclude=pacemaker* corosync* resource-agents* crmsh* cluster-glue* libqb* fence-agents* pcs*</pre>
 </td></tr> </table>

* * *

## 4. インストール

以下の手順で Pacemakerをインストールします。 yum コマンドにより必要な依存パッケージも自動的にインストールされます。

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># yum install -y pacemaker-repo-1.1.16-1.1.el7.x86_64.rpm
# yum install -y pacemaker-all</pre>
 </td></tr> </table>

* * *

## 5. 設定例

### 5.1. corosync設定ファイルの設定

corosyncの動作に必要な設定を行います。 以下は最低限必要な設定例です。

**/etc/corosync/corosync.conf 設定例**
    
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;">totem {
        version: 2
        token: 1000
        rrp_mode: active
        interface {
                ringnumber: 0
                bindnetaddr: 192.168.101.0
                mcastaddr: 239.255.1.1
                mcastport: 5405
        }
        interface {
                ringnumber: 1
                bindnetaddr: 192.168.102.0
                mcastaddr: 239.255.1.2
                mcastport: 5405
        }
}

logging {
        syslog_facility: daemon
        debug: off
}

quorum {
        provider: corosync_votequorum
        expected_votes: 2
}</pre>
 </td></tr> </table>

ここで以下の設定項目は環境に合わせて設定してください。

  * bindnetaddr, mcastaddr, mcastport: ネットワークに合わせて設定します。 
  * syslog_facility : ログの出力先を変更したい場合は適宜変更します。 
  * expected_votes : クラスタを構成するノードの数を設定します。 

詳細は corysync.conf(5) マニュアルページ等を参照してください。

### 5.2. corosync認証鍵ファイルの設定

corosyncの認証を行うための認証鍵ファイルを作成します。

どれか一つのノード上で corosync-keygen コマンドを実行し、生成された authkey ファイルをクラスタを構成する全てのノードにコピーします。 以下の手順例は node2 へコピーしている例です。

**/etc/corosync/authkey 設定手順例**
    
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># corosync-keygen -l
# scp -p /etc/corosync/authkey root@node2:/etc/corosync/authkey</pre>
 </td></tr> </table>

### 5.3. pacemaker設定ファイルの設定

Pacemakerの内部プロセスが故障した場合もノード故障として取り扱うようにするため、 以下の設定を追加します。

記述内容は RHEL 6(Upstart 利用)と RHEL 7(systemd 利用)で異なります。

#### 5.3.1. pacemaker設定ファイルの設定(RHEL 6用)

**/etc/sysconfig/pacemaker (追加設定行)**
    
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;">export PCMK_fail_fast=yes</pre>
 </td></tr> </table>

#### 5.3.2. pacemaker設定ファイルの設定(RHEL 7用)

**/etc/sysconfig/pacemaker (追加設定行)**
    
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;">PCMK_fail_fast=yes</pre>
 </td></tr> </table>

### 5.4. クラスタ起動スクリプトの設定

故障時の動作等のカスタマイズのためクラスタ起動スクリプトを一部修正します。

修正する内容は RHEL 6(Upstart 利用)と RHEL 7(systemd 利用)で異なります。

#### 5.4.1. クラスタ起動スクリプトの設定(RHEL 6用)

RHEL 6では、以下の設定を行うためクラスタ起動スクリプトの一部を修正します。

  * corosyncプロセス故障時に watchdog 機能を有効にするため 
  * corosyncの改善により soft_margin オプションは不要となったため 

以下に修正箇所を示します。

**/etc/init/pacemaker.combined.conf (修正箇所抜粋)**
    
<table border="0" bgcolor="#e8e8e8" width="100%" cellpadding="10"><tr><td><pre><tt><font color="#FF6600">--- pacemaker.combined.conf.1.1.15.org  2016-09-09 11:10:23.000000000 +0900</font>
<font color="#009900">+++ pacemaker.combined.conf     2016-12-28 16:16:03.575999967 +0900</font>
<font color="#0000FF">@@ -22,7 +22,7 @@</font>
 pre-start script
     # setup the software watchdog which corosync uses.
     # rewrite according to environment.
<font color="#FF6600">-    [ -c /dev/watchdog ] || modprobe softdog soft_margin=60</font>
<font color="#009900">+    [ -c /dev/watchdog ] || modprobe softdog</font>
     pidof corosync || start corosync

     # if you use corosync-notifyd, uncomment the line below.
<font color="#0000FF">@@ -52,7 +52,7 @@</font>
     rm -f "/var/run/$prog.pid"

     # if you use watchdog of corosync, uncomment the line below.
<font color="#FF6600">-    #pidof corosync || false</font>
<font color="#009900">+    pidof corosync || false</font>

     pidof crmd || stop corosync
</tt></pre></td></tr></table>
 

#### 5.4.2. クラスタ起動スクリプトの設定(RHEL 7用)

RHEL 7では、以下の設定を行うためクラスタ起動スクリプト(systemd の Unitファイル)の一部を修正します。

  * pacemakerサービス停止時に corosyncサービスも同時に停止させるため 
  * corosyncプロセス故障時に watchdog 機能を有効にするため 
  * corosyncの改善により soft_margin オプションは不要となったため 

修正は、Unitファイルをパッケージ標準ディレクトリ(/usr/lib/systemd/system/)からローカル設定用ディレクトリ(/etc/systemd/system/)にコピーして修正します。

以下に修正箇所を示します。

**/etc/systemd/system/corosync.service (修正箇所抜粋)**
    
<table border="0" bgcolor="#e8e8e8" width="100%" cellpadding="10"><tr><td><pre><tt># cp -p /usr/lib/systemd/system/corosync.service /etc/systemd/system
# vi /etc/systemd/system/corosync.service

<font color="#FF6600">--- /usr/lib/systemd/system/corosync.service    2016-09-09 10:47:56.000000000 +0900</font>
<font color="#009900">+++ /etc/systemd/system/corosync.service        2016-12-28 16:10:59.131016326 +0900</font>
<font color="#0000FF">@@ -15,11 +15,11 @@</font>
 #  pacemaker.service, and if you want to exert the watchdog when a
 #  corosync process is terminated abnormally,
 #  uncomment the line of the following Restart= and RestartSec=.
<font color="#FF6600">-#Restart=on-failure</font>
<font color="#009900">+Restart=on-failure</font>
 #  Specify a period longer than soft_margin as RestartSec.
<font color="#FF6600">-#RestartSec=70</font>
<font color="#009900">+RestartSec=70</font>
 #  rewrite according to environment.
<font color="#FF6600">-#ExecStartPre=/sbin/modprobe softdog soft_margin=60</font>
<font color="#009900">+ExecStartPre=/sbin/modprobe softdog</font>

 [Install]
 WantedBy=multi-user.target</tt></pre></td></tr></table>
 

**/etc/systemd/system/pacemaker.service (修正箇所抜粋)**
    
<table border="0" bgcolor="#e8e8e8" width="100%" cellpadding="10"><tr><td><pre><tt># cp -p /usr/lib/systemd/system/pacemaker.service /etc/systemd/system
# vi /etc/systemd/system/pacemaker.service

<font color="#FF6600">--- /usr/lib/systemd/system/pacemaker.service   2015-05-29 17:30:30.000000000 +0900</font>
<font color="#009900">+++ /etc/systemd/system/pacemaker.service       2015-06-08 15:35:12.594000000 +0900</font>
<font color="#0000FF">@@ -43,7 +43,7 @@</font>
 # If you want Corosync to stop whenever Pacemaker is stopped,
 # uncomment the next line too:
 #
<font color="#FF6600">-# ExecStopPost=/bin/sh -c 'pidof crmd || killall -TERM corosync'</font>
<font color="#009900">+ExecStopPost=/bin/sh -c 'pidof crmd || killall -TERM corosync'</font>

 # Uncomment this for older versions of systemd that didn't support
 # TimeoutStopSec</tt></pre></td></tr></table>
 

* * *

## 6. 起動・終了

Upstart経由(RHEL 6の場合) または systemd経由(RHEL 7の場合)で起動する手順が推奨です。

このため、RHEL 6とRHEL 7で Pacemaker の起動・終了コマンドが異なります。

### 6.1. 起動コマンド

Pacemakerを起動するには以下のコマンドを実行します。クラスタを構成する全てのノードで実行してください。

#### 6.1.1. 起動コマンド(RHEL 6用)

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># initctl start pacemaker.combined</pre>
 </td></tr> </table>

#### 6.1.2. 起動コマンド(RHEL 7用)

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># systemctl start pacemaker</pre>
 </td></tr> </table>

### 6.2. 起動確認コマンド

正常に起動すると、crm_mon コマンドの表示でノードが Online 状態となります。

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># crm_mon -D1
Online: [ node1 node2 ]</pre>
 </td></tr> </table>

### 6.3. 終了コマンド

Pacemakerを停止するには以下のコマンドを実行します。クラスタを構成する全てのノードで実行してください。

#### 6.3.1. 終了コマンド (RHEL 6用)

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># initctl stop pacemaker.combined</pre>
 </td></tr> </table>

#### 6.3.2. 終了コマンド (RHEL 7用)

<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># systemctl stop pacemaker</pre>
 </td></tr> </table>

* * *

## 7. アンインストール

以下の手順で Pacemaker リポジトリパッケージを 全てアンインストールできます。

  * Pacemaker本体のアンインストール 
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># yum erase pacemaker corocync libqb cluster-glue cluster-glue-libs resource-agents \
pm_crmgen pm_logconv-cs pm_diskd pm_extras crmsh pssh</pre>
 </td></tr> </table>

  * Pacemakerリポジトリパッケージのアンインストール 
<table border="0" bgcolor="#e8e8e8" width="100%" style="margin:0.2em 0;"> <tr><td style="padding:0.5em;"><pre style="margin:0; padding:0;"># yum erase -y pacemaker-repo
# yum list installed | grep pacemaker-repo
#</pre>
 </td></tr> </table>

* * *

## 8. Ansible Playbook 例

上記2章から7章までの手順を Ansible で自動化した Playbook の例です。 詳細はリンク先の README.md を参照してください。

  * [Pacemaker リポジトリパッケージ用 Ansible Playbook](https://github.com/kskmori/ansible-pacemaker/)

* * *

## 9. リリースノート

### 9.1. リポジトリパッケージ内容

Pacemaker利用に必要なコンポーネントを一括してまとめインストールを容易にできるようにしたリポジトリパッケージです。 RHEL 6 / RHEL 7 およびこれらの RHEL互換OSに対応しています。

1.1.16-1.1リポジトリパッケージには、以下のバージョンのコンポーネントが含まれています。

推奨インストール手順では★印のついたパッケージがインストールされます。 太字は 1.1.15-1.1 から変更されたパッケージです。

  * バージョン一覧 
    * リポジトリパッケージ 
      * **pacemaker-repo-1.1.16-1.1** ★ 
    * 主要コンポーネント 
      * **pacemaker-1.1.16-1**  ★ 
      * cluster-glue-1.0.12-2  ★ 
      * **corosync-2.4.2-1**  ★ 
      * **libqb-1.0.1-1**  ★ 
      * **resource-agents-4.0.1-1** ★ 
      * **ldirectord-4.0.1-1**
      * **crmsh-2.1.9-1**  ★ 
      * pssh-2.3.1-5  ★ 
    * Linux-HA Japan拡張コンポーネント 
      * pm_crmgen-2.2-1  ★ 
      * pm_diskd-2.3-1  ★ 
      * **pm_extras-2.3-1**  ★ 
      * **pm_logconv-cs-2.4-1**  ★ 
      * pm_ctl-2.0-1 
    * 追加コンポーネント 
      * **pcs-0.9.156-1**
      * fence-agents-4.0.22-1 
  * 補足 
    * Heartbeatは今後非推奨とするためパッケージには含みません。 
    * ユーザインタフェースとして crmsh, pcs の2種類のコンポーネントを同梱していますが、1.0系と同様 crmsh の利用を推奨します。 
    * crmsh の機能のうち、pssh を利用する一部の機能(crm resource secret, crm cluster 等)は利用できません(コミュニティ版psshの制約による)。将来のバージョンアップ(crmsh-2.2系以降)で改善を検討します。 
    * pcs は本パッケージでは「テクノロジープレビュー」(お試し版)の位置付けで添付しており、実用目的の利用は推奨しません。また利用する場合はさらに依存パッケージの追加インストールが必要です。 
    * STONITHプラグインとして cluster-glue, fence-agents の2種類のコンポーネントを同梱していますが、1.0系と同様 cluster-glue に含まれるSTONITHプラグインの利用を推奨します。 
    * 1.0.13リポジトリパッケージに含まれていた pm_kvm_tools, vm-ctl コンポーネントは本バージョンには対応していないためパッケージには含みません。 

### 9.2. 1.1.15-1.1 からの主な差分

Pacemaker-1.1.15-1.1からの主な差分について記載します。

  * pacemaker-1.1.16-1 
    * クラスタ構成の設定(crm ファイル)でコメント行が複数連続すると、クラスタの構成処理が完了しない問題が修正されました。 
    * 複数のノードで Pacemaker を同時に起動すると、ごく稀に SNMP トラップが送信されない問題が修正されました。 
    * リソース配置制約の設定で、制約を適用するリソースを正規表現で指定することが可能になりました。 
    * 現用機で Pacemaker を起動・リソースが起動中に、予備機の Pacemaker を起動すると、現用機で起動中であったリソースが起動完了後に再起動する問題が修正されました。 
    * CPU 高負荷状態を検知した場合、リソースの遷移(起動・停止)処理の同時実行数が制限されますが、高負荷状態が解消された後もその遷移処理中は制限が解除されない問題が改善されました。 
    * Pacemaker ノード上の特権のないアカウントが、そのノード上で root アクセスを得ることできる問題(CVE-2016-7035)が修正されました。 
  * resource-agents-4.0.1-1 
    * IPaddr2: 
      * 監視処理と同時に定期的に ARP を送信するオプション(arp_count_refresh)が追加されました。 
      * IPv4 アドレスの重複をチェックするオプション(run_arping)が追加されました。 
    * docker: 
      * 監視時に docker exec コマンドが使用されるようになりました。(docker exec がサポートされている場合) 
      * レジストリサーバのポート番号が指定できない問題が修正されました。 
    * nfsserver: 
      * RHEL7 環境で、プロセス(nfsd,rpc.mountd)故障が検知されない問題が修正されました。 
      * RHEL7 環境で、nfs-server.service の停止失敗が検知されない問題が修正されました。 
    * mysql: 
      * マスターサーバの待ち受けポート番号が指定できない問題が修正されました。 
    * oracle: 
      * 起動処理(Oracle 起動前のクリーンアップ処理)が改善されました。 
    * pgagent: 
      * PostgreSQL のジョブスケジューラ(pgAgent)用の RA が追加されました。 
    * pgsql: 
      * PostgreSQL 9.6 でのレプリケーション機能の仕様変更に対応しました。 
      * 停止処理中の不要な待機処理が削除・改善されました。 
    * slapd: 
      * 軽微な問題が修正されました。 
    * tomcat: 
      * Tomcat を Systemd 経由で制御することが可能になりました。 
    * ldirectord: 
      * IPv4 と IPv6 の仮想サービスが混在している場合、IPv4 仮想サービスのバックエンドサーバの故障が検知されない問題が修正されました。 
  * corosync-2.4.2-1 
    * 最新版に追随しました。 
  * libqb-1.0.1-1 
    * 最新版に追随しました。 
  * crmsh-2.1.9-1 
    * 軽微な問題が修正されました。 
  * pcs-0.9.156-1 
    * 最新版に追随しました。 
  * pm_extras-2.3-1 
    * VIPcheck RA: monitor/stop オペレーションのタイムアウト設定省略時に不要な警告が出ないように改善されました。 
    * ifcheckd: 不要な実行ログを抑止するように改善されました。 
  * pm_logconv-cs-2.4-1 
    * pm_logconv-cs 用の sosreport プラグインが追加されました。 
      * 追加プラグインの収集対象は、pm_logconv の設定ファイル、変換対象と変換後のログ です。 
    * systemctl status pm_logconv.service の状態表示が、正常停止した場合でも異常と表示される問題が修正されました。 

以上です。
